package test.junit.org.optimizationBenchmarking.utils.math.statistics.aggregate;

import org.junit.Assert;
import org.junit.Test;
import org.optimizationBenchmarking.utils.math.statistics.aggregate.VarianceAggregate;

/** A test of the variance. */
public class VarianceTest {

  /** the variance data for {@code long}-based computation */
  static final long[] VARIANCE_DATA_1 = { 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L,
      9L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L,
      10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L,
      10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L,
      10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L,
      10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L,
      10L, 10L, -10L, -20L, -30L, -40L, -50L, -60L, -70L, -80L, -90L,
      -100L, -110L, };

  /** the variance result for {@code long}-based computation */
  static final double[] VARIANCE_RESULTS_1 = { Double.NaN, 5E-1d, 1d,
      1.666666666666666666666666666666666d, 2.5d, 3.5d,
      4.666666666666666666666666666666666d, 6d, 7.5d,
      9.166666666666666666666666666666666666666666666d,
      1.00909090909091E1d, 1.05681818181818E1d, 1.07692307692308E1d,
      1.07967032967033E1d, 1.07142857142857E1d, 1.05625E1d,
      1.03676470588235E1d, 1.01470588235294E1d, 9.91228070175439d,
      9.67105263157895d, 9.42857142857143d, 9.18831168831169d,
      8.95256916996048d, 8.72282608695652d, 8.5d, 8.28461538461538d,
      8.07692307692308d, 7.87698412698412d, 7.6847290640394d, 7.5d,
      7.32258064516128d, 7.15221774193548d, 6.98863636363636d,
      6.83155080213904d, 6.68067226890757d, 6.53571428571429d,
      6.3963963963964d, 6.2624466571835d, 6.13360323886639d,
      6.00961538461539d, 5.89024390243902d, 5.77526132404181d,
      5.66445182724253d, 5.5576109936575d, 5.45454545454545d,
      5.35507246376811d, 5.25901942645699d, 5.16622340425532d,
      5.0765306122449d, 4.98979591836735d, 4.90588235294117d,
      4.82466063348416d, 4.74600870827285d, 4.66981132075472d,
      4.59595959595959d, 4.52435064935064d, 4.45488721804512d,
      4.38747731397459d, 4.32203389830509d, 4.25847457627119d,
      4.1967213114754d, 4.13670015864622d, 4.07834101382489d,
      4.02157738095238d, 3.96634615384616d, 3.91258741258742d,
      3.86024423337857d, 3.80926251097453d, 3.75959079283887d,
      3.7111801242236d, 3.66398390342052d, 3.61795774647887d,
      3.57305936073059d, 3.5292484265087d, 3.48648648648649d,
      3.44473684210527d, 3.40396445659603d, 3.36413586413587d,
      3.32521908471276d, 3.2871835443038d, 7.9104938271605d,
      1.82091237579042E1d, 3.61636791066706E1d, 6.35850545037292E1d,
      1.02128851540616E2d, 1.53308481532148E2d, 2.18507083667469E2d,
      2.98988375130617E2d, 3.95906537282942E2d, 5.10315230961298E2d,
      6.43175824175824E2d, };

  /** the variance data for {@code double}-based computation */
  static final double[] VARIANCE_DATA_2 = { 1.914E7d, -2.327E2d, 3.931E2d,
      8.97d, -2.255E6d, 3.381E3d, 2.618E4d, 4.017E6d, 3.61E7d, -1.672E5d,
      -4.952E5d, -1.461E5d, -2.866E3d, 1.504E4d, -3.497E3d, -1.821E4d,
      -2.916E2d, 5.59E6d, -1.249E5d, 1.421E2d, -3.797E4d, 2.831E4d,
      -1.631E1d, 3.587E5d, 2.434E4d, 1.916E4d, -1.325E2d, 1.953E6d,
      -4.033E3d, -3.66E1d, 1.153E3d, -4.257E2d, -2.775E4d, -5.38E3d,
      -1.922E7d, -3.63E6d, 3.5E4d, 3.396E2d, 4.326E6d, -2.678E5d,
      -4.282E7d, 1.859E1d, -2.995E1d, 3.716E3d, 3.622E6d, 3.943E7d, 5.5E5d,
      3.029E5d, -4.459E1d, 4.814E3d, -6.7d, 4.258E2d, -8.16E3d, 1.402E1d,
      4.593E7d, 6.E3d, -4.26E6d, 4.16E6d, -4.44E1d, 1.171E6d, -3.636E6d,
      -1.048E6d, -4.34E2d, 4.607E4d, -4.825E7d, 5.77E5d, 2.32E7d, 4.41E1d,
      -7.37E4d, -3.632E3d, -4.4E-1d, 1.832E5d, 1.068E7d, -2.04E4d,
      -4.718E7d, -2.889E5d, 1.4d, 3.1E5d, -2.967E3d, 3.17E2d, -3.51E1d,
      -2.067E5d, 1.201E3d, -2.785E7d, 1.258E4d, 3.143E3d, 3.923E7d,
      8.64E2d, 3.714E7d, -1.96E5d, -4.333E4d, 3.387E7d, 4.589E7d,
      -4.848E2d, 1.904E1d, -3.22d, 2.553E3d, -1.448E7d, 9.65E3d, -2.608E4d,
      1.743E7d, -4.051E4d, -6.94d, 1.064E2d, 1.565E5d, 1.701E2d, -2.751E1d,
      2.245E7d, -2.426E1d, -1.81E1d, 3.089E3d, -4.514E4d, -1.528E5d,
      1.425E4d, 4.602E6d, 2.205E7d, -2.035E7d, 3.218E7d, -3.502E5d,
      -2.101E3d, 1.891E5d, -4.345E5d, 3.158E4d, 4.664E3d, 3.525E5d, -4.E2d,
      1.955E5d, -4.755E6d, };

  /** the variance result for {@code double}-based computation */
  static final double[] VARIANCE_RESULTS_2 = { Double.NaN,
      1.83174253905075E14d, 1.2211217674805E14d, 9.15843597768953E13d,
      7.860070906951E13d, 6.47774895413161E13d, 5.50921226365816E13d,
      4.75420634281458E13d, 1.66171197642979E14d, 1.51938009494695E14d,
      1.40218102569757E14d, 1.29785924153256E14d, 1.20661092906897E14d,
      1.12706090488312E14d, 1.05733182476357E14d, 9.95711985080408E13d,
      9.40742174282705E13d, 8.88300839131927E13d, 8.4561519829925E13d,
      8.06377701754018E13d, 7.70699899787527E13d, 7.37841003932475E13d,
      7.07719151185608E13d, 6.79196371328408E13d, 6.53518262184741E13d,
      6.29710599852777E13d, 6.07602104296896E13d, 5.85141060423095E13d,
      5.66052432662805E13d, 5.48157916387361E13d, 5.31353415513029E13d,
      5.15546357504247E13d, 5.00682319732772E13d, 4.86622279516978E13d,
      5.99536678451727E13d, 5.89101226016899E13d, 5.73068930601744E13d,
      5.57906240602477E13d, 5.45920349282679E13d, 5.32436795150711E13d,
      9.90265108645322E13d, 9.66113124006119E13d, 9.4311119780714E13d,
      9.21179002241736E13d, 9.03070744791484E13d, 1.2186902713851E14d,
      1.19223789874226E14d, 1.16696638928504E14d, 1.14284465061847E14d,
      1.11969819292712E14d, 1.09747254189389E14d, 1.07611198732019E14d,
      1.05557002473641E14d, 1.03579503102886E14d, 1.38597921165996E14d,
      1.36127833163565E14d, 1.34309207550649E14d, 1.32070920414434E14d,
      1.29836624655526E14d, 1.2763855074668E14d, 1.25953054413895E14d,
      1.23990537115814E14d, 1.22023153318426E14d, 1.20115216243055E14d,
      1.5614154768233E14d, 1.53739400819735E14d, 1.59018869921547E14d,
      1.56658960320486E14d, 1.54370171264211E14d, 1.52145362713761E14d,
      1.49983680784555E14d, 1.47878436789672E14d, 1.47136615068749E14d,
      1.45135880527115E14d, 1.74142396880705E14d, 1.71826221814746E14d,
      1.69567051955565E14d, 1.67364911083389E14d, 1.6522084414283E14d,
      1.63130987953554E14d, 1.61093343473012E14d, 1.59108227274066E14d,
      1.57169239195588E14d, 1.64731137721481E14d, 1.62770055548852E14d,
      1.60855114111301E14d, 1.76676623212008E14d, 1.74648132930287E14d,
      1.87794397588556E14d, 1.8569663526644E14d, 1.83641989694774E14d,
      1.93486631814228E14d, 2.12865241003953E14d, 2.10606190810107E14d,
      2.08394566764721E14d, 2.06228908912965E14d, 2.04107712859554E14d,
      2.04643532985804E14d, 2.02576020016609E14d, 2.00550890514323E14d,
      2.01085824721134E14d, 1.99120315342233E14d, 1.97191617709138E14d,
      1.95299920342305E14d, 1.93439863405815E14d, 1.91619130609702E14d,
      1.89832357759371E14d, 1.92128592438062E14d, 1.90375441283776E14d,
      1.88653992755542E14d, 1.86963302760771E14d, 1.85304068611442E14d,
      1.83677293175853E14d, 1.82073931437232E14d, 1.80555804343278E14d,
      1.82586070693838E14d, 1.85201626229699E14d, 1.91543186759215E14d,
      1.89960986952899E14d, 1.88392995510834E14d, 1.86845197795514E14d,
      1.8534240657903E14d, 1.83848460876881E14d, 1.82379167717521E14d,
      1.80924338308668E14d, 1.79501374277653E14d, 1.78095547736161E14d,
      1.77021575539004E14d, };

  /**
   * Test {@code long}-based computation of the variance and compare with
   * results obtained with VAR.S of Microsoft Excel 2013.
   */
  @Test(timeout = 3600000)
  public final void testVarianceLongs() {
    VarianceAggregate agg;
    int i;

    agg = new VarianceAggregate();
    for (i = 0; i < VarianceTest.VARIANCE_DATA_1.length; i++) {
      agg.append(VarianceTest.VARIANCE_DATA_1[i]);
      if (i > 0) {
        Assert.assertEquals(VarianceTest.VARIANCE_RESULTS_1[i],
            agg.doubleValue(), 1e-12);
      }
    }
  }

  /**
   * Test {@code double}-based computation of the variance and compare with
   * results obtained with VAR.S of Microsoft Excel 2013.
   */
  @Test(timeout = 3600000)
  public final void testVarianceDoubles() {
    VarianceAggregate agg;
    double a, b;
    int i;

    agg = new VarianceAggregate();
    for (i = 0; i < VarianceTest.VARIANCE_DATA_2.length; i++) {
      agg.append(VarianceTest.VARIANCE_DATA_2[i]);
      if (i > 0) {
        a = VarianceTest.VARIANCE_RESULTS_2[i];
        b = agg.doubleValue();
        Assert.assertEquals(a, b, (Math.max(a, b) * 1e-14));
      }
    }
  }
}